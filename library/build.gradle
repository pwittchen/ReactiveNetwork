apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.hiya.jacoco-android'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'net.ltgt.apt'
apply from: '../config/quality.gradle'
apply from: '../maven_push.gradle'

jacoco {
  toolVersion = "0.8.4"
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    multiDexEnabled true
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.compileSdkVersion
    versionCode 1
    versionName "1.0"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug {
      minifyEnabled false
      testCoverageEnabled true
    }
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/LICENSE.txt'
  }

  testOptions {
    unitTests.all {
      jacoco {
        includeNoLocationClasses = true
      }
    }
  }

  testOptions.unitTests.includeAndroidResources = true

  jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
  }

  dependencies {
    api deps.rxjava2
    api deps.rxandroid2
    implementation deps.annotation

    testImplementation deps.junit
    testImplementation deps.truth
    testImplementation deps.robolectric
    testImplementation deps.mockitocore

    annotationProcessor deps.nullaway

    compileOnly deps.nopen

    errorprone deps.errorprone
    errorprone deps.nopenchecker
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  tasks.withType(JavaCompile) {
    if (!name.toLowerCase().contains("test")) {
      options.compilerArgs +=
          ["-Xep:NullAway:ERROR", "-XepOpt:NullAway:AnnotatedPackages=com.github.pwittchen.reactivenetwork"]
    }
  }

  tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
  }
}